# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

env:
    MODE: CI
    WEB3: https://volta-rpc.energyweb.org
    INFLUXDB_URL: http://localhost:8086
    INFLUXDB_TOKEN: admin:admin
    INFLUXDB_BUCKET: energy/autogen
    HEROKU_STABLE_APP_API: ${{secrets.HEROKU_STABLE_APP_API}}
    HEROKU_STABLE_APP_MIGRATIONS: ${{secrets.HEROKU_STABLE_APP_MIGRATIONS}}
    HEROKU_STABLE_APP_UI: ${{secrets.HEROKU_STABLE_APP_UI}}
    HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
    REACT_APP_BACKEND_URL: https://${{secrets.HEROKU_STABLE_APP_API}}.herokuapp.com
    REACT_APP_GOOGLE_MAPS_API_KEY: ${{secrets.REACT_APP_GOOGLE_MAPS_API_KEY}}
    REACT_APP_REGISTRATION_MESSAGE_TO_SIGN: ${{secrets.REACT_APP_REGISTRATION_MESSAGE_TO_SIGN}}
    REACT_APP_SUPPORTED_NETWORK_IDS: ${{secrets.REACT_APP_SUPPORTED_NETWORK_IDS}}
    REACT_APP_ISSUER_ADDRESS: ${{secrets.REACT_APP_ISSUER_ADDRESS}}
    REACT_APP_BLOCKCHAIN_EXPLORER_URL: ${{secrets.REACT_APP_BLOCKCHAIN_EXPLORER_URL}}
    MNEMONIC: stone eyebrow bronze glide upon subject camera cushion rice outside swing casual

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Service containers to run with `container-job`
        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres
                # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    JWT_SECRET: thisisnotsecret
                    JWT_EXPIRY_TIME: '7 days'
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    # Maps tcp port 5432 on service container to the host
                    - 5432:5432
            redis:
                image: redis
                ports:
                    - 6379:6379

        strategy:
            matrix:
                node-version: [14]

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - run: PGPASSWORD=postgres psql -c 'create database origin;' -U postgres -h localhost -p 5432

            - run: node common/scripts/install-run-rush.js install
            - run: node common/scripts/install-run-rush.js check

            - run: node common/scripts/install-run-rush.js rebuild --verbose

            - run: node common/scripts/install-run-rush.js test:mocha --verbose

            - run: node common/scripts/install-run-rush.js test:e2e --verbose

            # - run: node common/scripts/install-run-rush.js test:ui

            - name: Deployment to Heroku
              if: ${{ github.ref == 'refs/heads/master' }}
              run: node common/scripts/install-run-rush.js deploy:heroku
